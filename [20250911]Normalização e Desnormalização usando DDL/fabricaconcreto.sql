-- 1) Fornecedores
CREATE TABLE Fornecedor (
  id_fornecedor NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome_fornecedor VARCHAR2(150) NOT NULL,
  cnpj VARCHAR2(20) NOT NULL UNIQUE,
  telefone VARCHAR2(30),
  email VARCHAR2(150)
);

-- 2) Materiais
CREATE TABLE Material (
  id_material NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome_material VARCHAR2(120) NOT NULL,
  unidade VARCHAR2(10) NOT NULL, -- ex: kg
  custo_unitario NUMBER(12,4) DEFAULT 0 CHECK (custo_unitario >= 0)
);

-- 3) Receitas (tipos de concreto e proporções)
CREATE TABLE Receita (
  id_receita NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome_receita VARCHAR2(150) NOT NULL,
  descricao VARCHAR2(4000),
  rendimento_ton NUMBER(10,3) DEFAULT 1 CHECK (rendimento_ton > 0)
);

-- 4) Receita 
CREATE TABLE Receita_Material (
  id_receita NUMBER NOT NULL,
  id_material NUMBER NOT NULL,
  quant_kg_por_ton NUMBER(10,4) NOT NULL CHECK (quant_kg_por_ton >= 0),
  CONSTRAINT pk_receita_material PRIMARY KEY (id_receita, id_material),
  CONSTRAINT fk_rm_receita FOREIGN KEY (id_receita) REFERENCES Receita(id_receita),
  CONSTRAINT fk_rm_material FOREIGN KEY (id_material) REFERENCES Material(id_material)
);

-- 5) Funcionários
CREATE TABLE Funcionario (
  id_funcionario NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome_funcionario VARCHAR2(150) NOT NULL,
  cargo VARCHAR2(80),
  salario NUMBER(12,2) DEFAULT 0 CHECK (salario >= 0)
);

-- 6) Veículos
CREATE TABLE Veiculo (
  id_veiculo NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  placa VARCHAR2(20) UNIQUE,
  tipo VARCHAR2(50),
  capacidade_ton NUMBER(10,3) CHECK (capacidade_ton > 0)
);

-- 7) Clientes
CREATE TABLE Cliente (
  id_cliente NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  nome_cliente VARCHAR2(200) NOT NULL,
  cnpj VARCHAR2(20) UNIQUE,
  cidade VARCHAR2(100),
  contato VARCHAR2(150)
);

-- 8) Lotes de Produção
CREATE TABLE Lote_Producao (
  id_lote NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  data_producao DATE DEFAULT SYSDATE NOT NULL,
  id_receita NUMBER NOT NULL,
  quantidade_ton NUMBER(12,3) NOT NULL CHECK (quantidade_ton > 0),
  status VARCHAR2(20) DEFAULT 'PRODUZIDO' CHECK (status IN ('PRODUZIDO', 'ENTREGUE', 'CANCELADO')),
  valor_total NUMBER(14,2) DEFAULT 0 CHECK (valor_total >= 0),
  observacoes VARCHAR2(2000),
  CONSTRAINT fk_lote_receita FOREIGN KEY (id_receita) REFERENCES Receita(id_receita)
);

-- 9) Associação Lote e funcionario 
CREATE TABLE Lote_Funcionario (
  id_lote NUMBER NOT NULL,
  id_funcionario NUMBER NOT NULL,
  hora_inicio DATE,
  hora_fim DATE,
  papel VARCHAR2(100),
  CONSTRAINT pk_lote_func PRIMARY KEY (id_lote, id_funcionario, hora_inicio),
  CONSTRAINT fk_lf_lote FOREIGN KEY (id_lote) REFERENCES Lote_Producao(id_lote),
  CONSTRAINT fk_lf_func FOREIGN KEY (id_funcionario) REFERENCES Funcionario(id_funcionario)
);

-- 10) Envios e despachos
CREATE TABLE Envio (
  id_envio NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  id_lote NUMBER NOT NULL,
  id_veiculo NUMBER NOT NULL,
  data_envio DATE DEFAULT SYSDATE NOT NULL,
  quantidade_ton NUMBER(12,3) NOT NULL CHECK (quantidade_ton > 0),
  destino VARCHAR2(300),
  motorista VARCHAR2(150),
  CONSTRAINT fk_envio_lote FOREIGN KEY (id_lote) REFERENCES Lote_Producao(id_lote),
  CONSTRAINT fk_envio_veiculo FOREIGN KEY (id_veiculo) REFERENCES Veiculo(id_veiculo)
);

-- 11) Pedidos e Vendas
CREATE TABLE Venda (
  id_venda NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  id_cliente NUMBER NOT NULL,
  data_venda DATE DEFAULT SYSDATE,
  valor_total NUMBER(14,2) DEFAULT 0 CHECK (valor_total >= 0),
  observacoes VARCHAR2(2000),
  CONSTRAINT fk_venda_cliente FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente)
);

-- 12) Itens de venda (vinculação do lote com as vendas)
CREATE TABLE Venda_Item (
  id_venda_item NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
  id_venda NUMBER NOT NULL,
  id_lote NUMBER NOT NULL,
  quantidade_ton NUMBER(12,3) NOT NULL CHECK (quantidade_ton > 0),
  preco_unit_ton NUMBER(14,4) NOT NULL CHECK (preco_unit_ton >= 0),
  CONSTRAINT fk_vi_venda FOREIGN KEY (id_venda) REFERENCES Venda(id_venda),
  CONSTRAINT fk_vi_lote FOREIGN KEY (id_lote) REFERENCES Lote_Producao(id_lote)
);